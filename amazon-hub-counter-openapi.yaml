openapi: 3.0.0
info:
  title: 'Amazon Hub Counter API'
  description: |
    Amazon's API for creating and updating Amazon Hub Counter Access Points. 
    
    This guide is intended for Amazon Hub Counter partners who want to integrate with the Access Points Onboarding API. The API enables partners to programmatically create, update and disable locations in Amazon systems.
    
    Through this guide the partner developers can learn how to:
    1. Create a developer account and security profiles to access Sandbox and Production API environments.
    2. Request and use an authentication token to access the API.
    3. Create, update and disable locations through the API.

    In the scope of this document we will refer to partner locations also as Access Point locations.

    # Developer Account Registration Process
    To access the Access Points API you must create two security profiles:
    1. A Production security profile to access the production environment.
    2. A Sandbox security profile to access Sandbox (test) environment. To create a security profile you will have to register as an Amazon developer on developer.amazon.com. 
    
    > **NOTE**: The email used for this account should be one dedicated for this purpose (e.g: amazon-pickup@corpdomain.com).
    
    > **NOTE**: You must use dedicated security profiles for the Access Points Partner Onboarding API. You must not use the same security profiles for other use cases.

    ## Setting up a new Security Profile
    To create a security profile you must access https://developer.amazon.com/ using an existing Amazon Account or a new Amazon Developer Account.
    
    After you complete the account registration process you need to access the Security Profile Management section from: 
    
    `Developer Console > Settings > Security Profiles` *(Figure 1)*.

    > ![Security Profile Management](assets/security_profiles_1.png)
    > *Figure 1 - Security Profile Management*

    You can now create a New Security Profile by providing following information *(Figure 2)*:
    1. **Security Profile Name**: A name for this security profile, for example: _AccessPoints-YourCompanyName-Sandbox-Profile_ or _AccessPointsYourCompanyName-Production-Profile_.
    2. **Security Profile Description**: A description for this security profile.

    > ![Create a new Security Profile](assets/security_profiles_2.png)
    > *Figure 2 - Create a new Security Profile*

    Clicking the ***Save*** button will create your security profile. You can now access the Web Settings tab containing the following information *(Figure 3)*:

    1. **Client ID**:  A client identifier which will be used for your application to get the OAuth token. This identifier must be shared with your Amazon representative in order to enable access to the API.
    2. **Client Secret**: Your client secret or password (do not share your secret with Amazon or anyone else).

    The Client ID and Client Secret that have been created will allow you to securely identify with the Amazon Access Points Onboarding API. You will need both of these in order to receive your access tokens and authenticate with the API.  

    > ![Security Profile Web Settings](assets/security_profiles_3.png)
    > *Figure 3 - Security Profile Web Settings*

    > **NOTE**: The Client ID is different from the Security Profile ID available from the General tab of your security profile. There is no need to share the Security Profile ID with Amazon.

    > **NOTE**: You have to complete the following process twice to generate a Security Profile which will be granted access to the Sandbox environment and once more to access the Production environment.

    ### Submitting your Client IDs to Amazon
    After creating a Sandbox and Production Client ID you need to share this information with your Amazon representative as soon as possible. 
    
    This is because your Client IDs must be enabled by Amazon in order for you to be able to access the Access Point Onboarding API and move to the next step.

    > ![Getting the Security Profile Client ID](assets/security_profiles_4.gif)

    # Endpoints
    
    ## Authentication
    
    | Region | Endpoint                             |
    |--------|--------------------------------------|
    |   All  | https://api.amazon.com/auth/o2/token |

    > **NOTE**: For obtaining the access token the endpoint is the same for all regions and environments.

    ## Sandbox

    | Region | Endpoint                                       |
    |--------|------------------------------------------------|
    |   NA   | https://accesspoints-api-sandbox-na.amazon.com |
    |   EU   | https://accesspoints-api-sandbox-eu.amazon.com |
    |   FE   | https://accesspoints-api-sandbox-fe.amazon.com |

    ## Production

    | Region | Endpoint                                       |
    |--------|------------------------------------------------|
    |   NA   | https://accesspoints-api-na.amazon.com |
    |   EU   | https://accesspoints-api-eu.amazon.com |
    |   FE   | https://accesspoints-api-fe.amazon.com |

    # FAQ

    #### How do I submit regular store closures (e.g. a location close on Sundays)?
    You can skip entries for regular closure days in the standardHours array (e.g. skip SUNDAY if the location is closed on Sundays).

    #### How do I manage exceptional changes in opening hours (e.g. different opening hours during Easter and Christmas holidays) ?
    We don't support yet exceptional change in opening hours.
    
    #### How exceptional closures are reflected in the Amazon website?
    Exceptional closures submitted in the exceptionalClosures array are used to delay the Amazon customer promise, the customer will be able to see the location in the search results and on the address book. To temporary remove a location from the website you can deactivate the location setting to false the *isActive* parameter.
    
    #### How do I create an excepcional closure starting now and finishing some time in the future?
    You cannot use the current date for the exceptionalClosure startDateTime property as it will fail the validation, it has to be some time in the future. Consider if deactivating the location is not a best option for your use-case.
    
    #### Are previously sent exceptional closures stored?
    No, you have to submit every future exceptional closure on each feed update, they are overwritten every time. So if you don't send them, the previously created ones are deleted.
    
    #### Are there any requirements for the format of the latitude and longitude properties?
    We support positive and negative digits and `.` (dot) as the decimal separator. The values must be between -90 and 90 for the latitude and between -180 and 180 for the longitude.
    
    #### Why am I not able to get the LWA token while invoking api.amazon.com?
    Please validate following:

      1. Validate Header `Content-Type`. The value should be `application/json`.
      2. Validate clientId, clientSecret, grantType (should be `client_credentials`) and scope (should be `accesspoints::accesspoint:readwrite`).
      3. Validate URI (should be https://api.amazon.com/auth/o2/token) and HTTP VERB (should be `POST`).
    
    #### Why the API endpoint submit Feed (/v1/feeds POST) is returning 4XX code?
    Please validate following:

      1. Your token is valid and issued within 1 hour of API invocation.
      2. You must be passing token in `Authorization` header while invoking Access Points API. Authorization header value should be formed as `Bearer <Token granted from api.amazon.com>`. There must be a space in between `Bearer` and token.
      3. Validate the DNS name and overall URI.
    
    #### Why the API endpoint get Feed (/v1/feeds GET) is returning 4XX code?
    Please validate following:

      1. Your token is valid and issued within 1 hour of API invocation.
      2. You must be passing token in `Authorization` header while invoking Access Points API. Authorization header value should be formed as `Bearer <Token granted from api.amazon.com>`. There must be a space in between `Bearer` and token.
      3. Validate the variable feedId/documentId are correct in URL.
      4. Validate the DNS name and overall URI.

    #### What are the areas which must be done before start invoking Access Points API?
    Please validate following:

      1. Does your mail-server allow mails from amazon.com ? If not please whitelist amazon.com domain.
      2. `Content-Type` must be `application/json` in all POST calls.
      3. Your `Content-Length` should not be exceeding 6MB.

    ####  I cannot set the closingTime to 00:00:00. How do I represent a 24hs open location?
    Set the standardHours openingTime to 00:00:00 and the closingTime to 23:59:00, this will be shown as *Open 24hs* on Amazon website.

    #### How do I hide/remove a location from Amazon website?
    Send a feed updating that store and set the *isActive* flag to `false`.

    #### Can't I just send the JSON properties the Access Point I want to update?
    No, the logic behind the update overwrites every property of the Access Point that matches the accessPointId on your request, if you omit properties they will be set to null/empty.

    #### How do I get a list of the Access Points I have sumitted?
    This is not possible currently via the API. On the production environment we can generate a csv file with the list of your stores upon request.

    # Appendixes

    ## APPENDIX I - API HTTP response status codes

    <table>
        <thead>
            <tr>
                <th>Response status code</th>
                <th>Meaning</th>
                <th>When this response will be returned</th>
                <th>Sample body</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>200</td>
                <td>OK</td>
                <td>Success API  calls  in case of GET APIs | Payload will depend on specific APIs.</td>
                <td></td>
            </tr>
            <tr>
                <td>201</td>
                <td>Created/Updated</td>
                <td>Success API  calls  in case of POST APIs | Payload will depend on specific APIs.</td>
                <td></td>
            </tr>
            <tr>
                <td>400</td>
                <td>Bad Request</td>
                <td>In case of any required property not provided by client. For example if you don't not provide the feedType, you will get the 400 response.</td>
                <td>
                  <code>
                  { <br/>
                    &nbsp;&nbsp;&nbsp; "message": "FeedType is not present in request", <br/>
                    &nbsp;&nbsp;&nbsp; "retryable": "false" <br/>
                  } <br/>
                  </code>
                </td>
            </tr>
            <tr>
                <td>403</td>
                <td>Access to resource is denied</td>
                <td>If you don't have access to APIs like you authenticated, authorized or you have token which is not valid.</td>
                <td>
                  <code>
                  { <br/>
                    &nbsp;&nbsp;&nbsp; "message": "Auth with LWA failed: INVALID_TOKEN: invalid checksum", <br/>
                    &nbsp;&nbsp;&nbsp; "retryable": "false" <br/>
                  } <br/>
                  </code>
                </td>
            </tr>
            <tr>
                <td>404</td>
                <td>Requested resource doesn't exists</td>
                <td>If you try to access an invalid resource, you will get this response.</td>
                <td>
                  <code>
                  { <br/>
                    &nbsp;&nbsp;&nbsp; "message": "Requested resource does not exists.", <br/>
                    &nbsp;&nbsp;&nbsp; "retryable": "false" <br/>
                  } <br/>
                  </code>
                </td>
            </tr>
            <tr>
                <td>500</td>
                <td>Access Point API internal server error</td>
                <td>This error will be thrown when there is some issue happening in the server side itself.</td>
                <td>
                  <code>
                  { <br/>
                    &nbsp;&nbsp;&nbsp; "message": "An error occurred, please try again later."<br/>
                    &nbsp;&nbsp;&nbsp; "retryable": "true" <br/>
                  } <br/>
                  </code>
                </td>
            </tr>
        </tbody>
    </table>    

    ## APPENDIX II - Supported Time Zones
    | Time Zone | Time Zone Code |
    |---------|---------------|
    | -12:00  |    Etc/GMT+12 |
    | -11:00  |    Etc/GMT+11 |
    | -11:00  |    Pacific/Midway |
    | -11:00  |    Pacific/Niue |
    | -11:00  |    Pacific/Pago_Pago, Pacific/Samoa, US/Samoa |
    | -10:00  |    America/Adak, America/Atka, US/Aleutian |
    | -10:00  |    Etc/GMT+10 |
    | -10:00  |    Pacific/Honolulu, Pacific/Johnston, US/Hawaii |
    | -10:00  |    Pacific/Rarotonga |
    | -10:00  |    Pacific/Tahiti |
    | -09:30  |    Pacific/Marquesas |
    | -09:00  |    America/Anchorage, US/Alaska |
    | -09:00  |    America/Juneau |
    | -09:00  |    America/Metlakatla |
    | -09:00  |    America/Nome |
    | -09:00  |    America/Sitka |
    | -09:00  |    America/Yakutat |
    | -09:00  |    Etc/GMT+9 |
    | -09:00  |    Pacific/Gambier |
    | -08:00  |    America/Dawson |
    | -08:00  |    America/Los_Angeles, US/Pacific, US/Pacific-New |
    | -08:00  |    America/Tijuana, America/Ensenada, America/Santa_Isabel, Mexico/BajaNorte |
    | -08:00  |    America/Vancouver, Canada/Pacific |
    | -08:00  |    America/Whitehorse, Canada/Yukon |
    | -08:00  |    Etc/GMT+8 |
    | -08:00  |    PST8PDT |
    | -08:00  |    Pacific/Pitcairn |
    | -07:00  |    America/Boise |
    | -07:00  |    America/Cambridge_Bay |
    | -07:00  |    America/Chihuahua |
    | -07:00  |    America/Creston |
    | -07:00  |    America/Dawson_Creek |
    | -07:00  |    America/Denver, America/Shiprock, Navajo, US/Mountain |
    | -07:00  |    America/Edmonton, Canada/Mountain |
    | -07:00  |    America/Fort_Nelson |
    | -07:00  |    America/Hermosillo |
    | -07:00  |    America/Inuvik |
    | -07:00  |    America/Mazatlan, Mexico/BajaSur |
    | -07:00  |    America/Ojinaga |
    | -07:00  |    America/Phoenix, US/Arizona |
    | -07:00  |    America/Yellowknife |
    | -07:00  |    Etc/GMT+7 |
    | -07:00  |    MST7MDT |
    | -06:00  |    America/Bahia_Banderas |
    | -06:00  |    America/Belize |
    | -06:00  |    America/Chicago, US/Central |
    | -06:00  |    America/Costa_Rica |
    | -06:00  |    America/El_Salvador |
    | -06:00  |    America/Guatemala |
    | -06:00  |    America/Indiana/Knox, America/Knox_IN, US/Indiana-Starke |
    | -06:00  |    America/Indiana/Tell_City |
    | -06:00  |    America/Managua |
    | -06:00  |    America/Matamoros |
    | -06:00  |    America/Menominee |
    | -06:00  |    America/Merida |
    | -06:00  |    America/Mexico_City, Mexico/General |
    | -06:00  |    America/Monterrey |
    | -06:00  |    America/North_Dakota/Beulah |
    | -06:00  |    America/North_Dakota/Center |
    | -06:00  |    America/North_Dakota/New_Salem |
    | -06:00  |    America/Rainy_River |
    | -06:00  |    America/Rankin_Inlet |
    | -06:00  |    America/Regina, Canada/Saskatchewan |
    | -06:00  |    America/Resolute |
    | -06:00  |    America/Swift_Current |
    | -06:00  |    America/Tegucigalpa |
    | -06:00  |    America/Winnipeg, Canada/Central |
    | -06:00  |    CST6CDT |
    | -06:00  |    Etc/GMT+6 |
    | -06:00  |    Pacific/Easter, Chile/EasterIsland |
    | -06:00  |    Pacific/Galapagos |
    | -05:00  |    America/Atikokan, America/Coral_Harbour |
    | -05:00  |    America/Bogota |
    | -05:00  |    America/Cancun |
    | -05:00  |    America/Cayman |
    | -05:00  |    America/Detroit, US/Michigan |
    | -05:00  |    America/Eirunepe |
    | -05:00  |    America/Grand_Turk |
    | -05:00  |    America/Guayaquil |
    | -05:00  |    America/Havana, Cuba |
    | -05:00  |    America/Indiana/Indianapolis, America/Fort_Wayne, America/Indianapolis, US/East-Indiana |
    | -05:00  |    America/Indiana/Marengo |
    | -05:00  |    America/Indiana/Petersburg |
    | -05:00  |    America/Indiana/Vevay |
    | -05:00  |    America/Indiana/Vincennes |
    | -05:00  |    America/Indiana/Winamac |
    | -05:00  |    America/Iqaluit |
    | -05:00  |    America/Jamaica, Jamaica |
    | -05:00  |    America/Kentucky/Louisville, America/Louisville |
    | -05:00  |    America/Kentucky/Monticello |
    | -05:00  |    America/Lima |
    | -05:00  |    America/Nassau |
    | -05:00  |    America/New_York, US/Eastern |
    | -05:00  |    America/Nipigon |
    | -05:00  |    America/Panama |
    | -05:00  |    America/Pangnirtung |
    | -05:00  |    America/Port-au-Prince |
    | -05:00  |    America/Rio_Branco, America/Porto_Acre, Brazil/Acre |
    | -05:00  |    America/Thunder_Bay |
    | -05:00  |    America/Toronto, America/Montreal, Canada/Eastern |
    | -05:00  |    EST5EDT |
    | -05:00  |    Etc/GMT+5 |
    | -04:00  |    America/Anguilla |
    | -04:00  |    America/Antigua |
    | -04:00  |    America/Aruba |
    | -04:00  |    America/Asuncion |
    | -04:00  |    America/Barbados |
    | -04:00  |    America/Blanc-Sablon |
    | -04:00  |    America/Boa_Vista |
    | -04:00  |    America/Campo_Grande |
    | -04:00  |    America/Caracas |
    | -04:00  |    America/Cuiaba |
    | -04:00  |    America/Curacao |
    | -04:00  |    America/Dominica |
    | -04:00  |    America/Glace_Bay |
    | -04:00  |    America/Goose_Bay |
    | -04:00  |    America/Grenada |
    | -04:00  |    America/Guadeloupe |
    | -04:00  |    America/Guyana |
    | -04:00  |    America/Halifax, Canada/Atlantic |
    | -04:00  |    America/Kralendijk |
    | -04:00  |    America/La_Paz |
    | -04:00  |    America/Lower_Princes |
    | -04:00  |    America/Manaus, Brazil/West |
    | -04:00  |    America/Marigot |
    | -04:00  |    America/Martinique |
    | -04:00  |    America/Moncton |
    | -04:00  |    America/Montserrat |
    | -04:00  |    America/Port_of_Spain, America/Virgin |
    | -04:00  |    America/Porto_Velho |
    | -04:00  |    America/Puerto_Rico |
    | -04:00  |    America/Santiago, Chile/Continental |
    | -04:00  |    America/Santo_Domingo |
    | -04:00  |    America/St_Barthelemy |
    | -04:00  |    America/St_Kitts |
    | -04:00  |    America/St_Lucia |
    | -04:00  |    America/St_Thomas |
    | -04:00  |    America/St_Vincent |
    | -04:00  |    America/Thule |
    | -04:00  |    America/Tortola |
    | -04:00  |    Atlantic/Bermuda |
    | -04:00  |    Etc/GMT+4 |
    | -03:30  |    America/St_Johns, Canada/Newfoundland |
    | -03:00  |    America/Araguaina |
    | -03:00  |    America/Argentina/Buenos_Aires, America/Buenos_Aires |
    | -03:00  |    America/Argentina/Catamarca, America/Argentina/ComodRivadavia, America/Catamarca |
    | -03:00  |    America/Argentina/Cordoba, America/Cordoba, America/Rosario |
    | -03:00  |    America/Argentina/Jujuy, America/Jujuy |
    | -03:00  |    America/Argentina/La_Rioja |
    | -03:00  |    America/Argentina/Mendoza, America/Mendoza |
    | -03:00  |    America/Argentina/Rio_Gallegos |
    | -03:00  |    America/Argentina/Salta |
    | -03:00  |    America/Argentina/San_Juan |
    | -03:00  |    America/Argentina/San_Luis |
    | -03:00  |    America/Argentina/Tucuman |
    | -03:00  |    America/Argentina/Ushuaia |
    | -03:00  |    America/Bahia |
    | -03:00  |    America/Belem |
    | -03:00  |    America/Cayenne |
    | -03:00  |    America/Fortaleza |
    | -03:00  |    America/Godthab |
    | -03:00  |    America/Maceio |
    | -03:00  |    America/Miquelon |
    | -03:00  |    America/Montevideo |
    | -03:00  |    America/Paramaribo |
    | -03:00  |    America/Punta_Arenas |
    | -03:00  |    America/Recife |
    | -03:00  |    America/Santarem |
    | -03:00  |    America/Sao_Paulo, Brazil/East |
    | -03:00  |    Antarctica/Palmer |
    | -03:00  |    Antarctica/Rothera |
    | -03:00  |    Atlantic/Stanley |
    | -03:00  |    Etc/GMT+3 |
    | -02:00  |    America/Noronha, Brazil/DeNoronha |
    | -02:00  |    Atlantic/South_Georgia |
    | -02:00  |    Etc/GMT+2 |
    | -01:00  |    America/Scoresbysund |
    | -01:00  |    Atlantic/Azores |
    | -01:00  |    Atlantic/Cape_Verde |
    | -01:00  |    Etc/GMT+1 |
    | +00:00  |    Africa/Abidjan, Africa/Timbuktu |
    | +00:00  |    Africa/Accra |
    | +00:00  |    Africa/Bamako |
    | +00:00  |    Africa/Banjul |
    | +00:00  |    Africa/Bissau |
    | +00:00  |    Africa/Casablanca |
    | +00:00  |    Africa/Conakry |
    | +00:00  |    Africa/Dakar |
    | +00:00  |    Africa/El_Aaiun |
    | +00:00  |    Africa/Freetown |
    | +00:00  |    Africa/Lome |
    | +00:00  |    Africa/Monrovia |
    | +00:00  |    Africa/Nouakchott |
    | +00:00  |    Africa/Ouagadougou |
    | +00:00  |    America/Danmarkshavn |
    | +00:00  |    Antarctica/Troll |
    | +00:00  |    Atlantic/Canary |
    | +00:00  |    Atlantic/Faroe, Atlantic/Faeroe |
    | +00:00  |    Atlantic/Madeira |
    | +00:00  |    Atlantic/Reykjavik, Iceland |
    | +00:00  |    Atlantic/St_Helena |
    | +00:00  |    Etc/GMT, Etc/GMT+0, Etc/GMT-0, Etc/GMT0, Etc/Greenwich, GMT, GMT+0, GMT-0, GMT0, Greenwich |
    | +00:00  |    Etc/UCT, UCT |
    | +00:00  |    Etc/UTC, Etc/Universal, Etc/Zulu, Universal, Zulu |
    | +00:00  |    Europe/Dublin, Eire |
    | +00:00  |    Europe/Guernsey |
    | +00:00  |    Europe/Isle_of_Man |
    | +00:00  |    Europe/Jersey |
    | +00:00  |    Europe/Lisbon, Portugal |
    | +00:00  |    Europe/London, Europe/Belfast, GB, GB-Eire |
    | +00:00  |    UTC |
    | +00:00  |    WET |
    | +01:00  |    Africa/Algiers |
    | +01:00  |    Africa/Bangui |
    | +01:00  |    Africa/Brazzaville |
    | +01:00  |    Africa/Ceuta |
    | +01:00  |    Africa/Douala |
    | +01:00  |    Africa/Kinshasa |
    | +01:00  |    Africa/Lagos |
    | +01:00  |    Africa/Libreville |
    | +01:00  |    Africa/Luanda |
    | +01:00  |    Africa/Malabo |
    | +01:00  |    Africa/Ndjamena |
    | +01:00  |    Africa/Niamey |
    | +01:00  |    Africa/Porto-Novo |
    | +01:00  |    Africa/Sao_Tome |
    | +01:00  |    Africa/Tunis |
    | +02:00  |    Africa/Windhoek |
    | +01:00  |    Arctic/Longyearbyen |
    | +01:00  |    CET |
    | +01:00  |    Etc/GMT-1 |
    | +01:00  |    Europe/Amsterdam |
    | +01:00  |    Europe/Andorra |
    | +01:00  |    Europe/Belgrade |
    | +01:00  |    Europe/Berlin |
    | +01:00  |    Europe/Bratislava |
    | +01:00  |    Europe/Brussels |
    | +01:00  |    Europe/Budapest |
    | +01:00  |    Europe/Busingen |
    | +01:00  |    Europe/Copenhagen |
    | +01:00  |    Europe/Gibraltar |
    | +01:00  |    Europe/Ljubljana |
    | +01:00  |    Europe/Luxembourg |
    | +01:00  |    Europe/Madrid |
    | +01:00  |    Europe/Malta |
    | +01:00  |    Europe/Monaco |
    | +01:00  |    Europe/Oslo, Atlantic/Jan_Mayen |
    | +01:00  |    Europe/Paris |
    | +01:00  |    Europe/Podgorica |
    | +01:00  |    Europe/Prague |
    | +01:00  |    Europe/Rome |
    | +01:00  |    Europe/San_Marino |
    | +01:00  |    Europe/Sarajevo |
    | +01:00  |    Europe/Skopje |
    | +01:00  |    Europe/Stockholm |
    | +01:00  |    Europe/Tirane |
    | +01:00  |    Europe/Vaduz |
    | +01:00  |    Europe/Vatican |
    | +01:00  |    Europe/Vienna |
    | +01:00  |    Europe/Warsaw, Poland |
    | +01:00  |    Europe/Zagreb |
    | +01:00  |    Europe/Zurich |
    | +01:00  |    MET |
    | +02:00  |    Africa/Blantyre |
    | +02:00  |    Africa/Bujumbura |
    | +02:00  |    Africa/Cairo, Egypt |
    | +02:00  |    Africa/Gaborone |
    | +02:00  |    Africa/Harare |
    | +02:00  |    Africa/Johannesburg |
    | +02:00  |    Africa/Khartoum |
    | +02:00  |    Africa/Kigali |
    | +02:00  |    Africa/Lubumbashi |
    | +02:00  |    Africa/Lusaka |
    | +02:00  |    Africa/Maputo |
    | +02:00  |    Africa/Maseru |
    | +02:00  |    Africa/Mbabane |
    | +02:00  |    Africa/Tripoli, Libya |
    | +02:00  |    Asia/Amman |
    | +02:00  |    Asia/Beirut |
    | +02:00  |    Asia/Damascus |
    | +02:00  |    Asia/Famagusta |
    | +02:00  |    Asia/Gaza |
    | +02:00  |    Asia/Hebron |
    | +02:00  |    Asia/Jerusalem, Asia/Tel_Aviv, Israel |
    | +02:00  |    Asia/Nicosia |
    | +02:00  |    EET |
    | +02:00  |    Etc/GMT-2 |
    | +02:00  |    Europe/Athens |
    | +02:00  |    Europe/Bucharest |
    | +02:00  |    Europe/Chisinau, Europe/Tiraspol |
    | +02:00  |    Europe/Helsinki |
    | +02:00  |    Europe/Kaliningrad |
    | +02:00  |    Europe/Kiev |
    | +02:00  |    Europe/Mariehamn |
    | +02:00  |    Europe/Nicosia |
    | +02:00  |    Europe/Riga |
    | +02:00  |    Europe/Sofia |
    | +02:00  |    Europe/Tallinn |
    | +02:00  |    Europe/Uzhgorod |
    | +02:00  |    Europe/Vilnius |
    | +02:00  |    Europe/Zaporozhye |
    | +03:00  |    Africa/Addis_Ababa |
    | +03:00  |    Africa/Asmara |
    | +03:00  |    Africa/Dar_es_Salaam |
    | +03:00  |    Africa/Djibouti |
    | +03:00  |    Africa/Juba |
    | +03:00  |    Africa/Kampala |
    | +03:00  |    Africa/Mogadishu |
    | +03:00  |    Africa/Nairobi, Africa/Asmera |
    | +03:00  |    Antarctica/Syowa |
    | +03:00  |    Asia/Aden |
    | +03:00  |    Asia/Baghdad |
    | +03:00  |    Asia/Bahrain |
    | +03:00  |    Asia/Istanbul |
    | +03:00  |    Asia/Kuwait |
    | +03:00  |    Asia/Qatar |
    | +03:00  |    Asia/Riyadh |
    | +03:00  |    Etc/GMT-3 |
    | +03:00  |    Europe/Istanbul, Turkey |
    | +03:00  |    Europe/Kirov |
    | +03:00  |    Europe/Minsk |
    | +03:00  |    Europe/Moscow, W-SU |
    | +03:00  |    Europe/Simferopol |
    | +03:00  |    Indian/Antananarivo |
    | +03:00  |    Indian/Comoro |
    | +03:00  |    Indian/Mayotte |
    | +03:30  |    Asia/Tehran, Iran |
    | +04:00  |    Asia/Baku |
    | +04:00  |    Asia/Dubai |
    | +04:00  |    Asia/Muscat |
    | +04:00  |    Asia/Tbilisi |
    | +04:00  |    Asia/Yerevan |
    | +04:00  |    Etc/GMT-4 |
    | +04:00  |    Europe/Astrakhan |
    | +04:00  |    Europe/Samara |
    | +04:00  |    Europe/Saratov |
    | +04:00  |    Europe/Ulyanovsk |
    | +04:00  |    Europe/Volgograd |
    | +04:00  |    Indian/Mahe |
    | +04:00  |    Indian/Mauritius |
    | +04:00  |    Indian/Reunion |
    | +04:30  |    Asia/Kabul |
    | +05:00  |    Antarctica/Mawson |
    | +05:00  |    Asia/Aqtau |
    | +05:00  |    Asia/Aqtobe |
    | +05:00  |    Asia/Ashgabat, Asia/Ashkhabad |
    | +05:00  |    Asia/Atyrau |
    | +05:00  |    Asia/Dushanbe |
    | +05:00  |    Asia/Karachi |
    | +05:00  |    Asia/Oral |
    | +05:00  |    Asia/Samarkand |
    | +05:00  |    Asia/Tashkent |
    | +05:00  |    Asia/Yekaterinburg |
    | +05:00  |    Etc/GMT-5 |
    | +05:00  |    Indian/Kerguelen |
    | +05:00  |    Indian/Maldives |
    | +05:30  |    Asia/Colombo |
    | +05:30  |    Asia/Kolkata, Asia/Calcutta |
    | +05:45  |    Asia/Kathmandu, Asia/Katmandu |
    | +06:00  |    Antarctica/Vostok |
    | +06:00  |    Asia/Almaty |
    | +06:00  |    Asia/Bishkek |
    | +06:00  |    Asia/Dhaka, Asia/Dacca |
    | +06:00  |    Asia/Omsk |
    | +06:00  |    Asia/Qyzylorda |
    | +06:00  |    Asia/Thimphu, Asia/Thimbu |
    | +06:00  |    Asia/Urumqi, Asia/Kashgar |
    | +06:00  |    Etc/GMT-6 |
    | +06:00  |    Indian/Chagos |
    | +06:30  |    Asia/Yangon, Asia/Rangoon |
    | +06:30  |    Indian/Cocos |
    | +07:00  |    Antarctica/Davis |
    | +07:00  |    Asia/Bangkok |
    | +07:00  |    Asia/Barnaul |
    | +07:00  |    Asia/Ho_Chi_Minh, Asia/Saigon |
    | +07:00  |    Asia/Hovd |
    | +07:00  |    Asia/Jakarta |
    | +07:00  |    Asia/Krasnoyarsk |
    | +07:00  |    Asia/Novokuznetsk |
    | +07:00  |    Asia/Novosibirsk |
    | +07:00  |    Asia/Phnom_Penh |
    | +07:00  |    Asia/Pontianak |
    | +07:00  |    Asia/Tomsk |
    | +07:00  |    Asia/Vientiane |
    | +07:00  |    Etc/GMT-7 |
    | +07:00  |    Indian/Christmas |
    | +08:00  |    Antarctica/Casey |
    | +08:00  |    Asia/Brunei |
    | +08:00  |    Asia/Choibalsan |
    | +08:00  |    Asia/Hong_Kong, Hongkong |
    | +08:00  |    Asia/Irkutsk |
    | +08:00  |    Asia/Kuala_Lumpur |
    | +08:00  |    Asia/Kuching |
    | +08:00  |    Asia/Macau, Asia/Macao |
    | +08:00  |    Asia/Makassar, Asia/Ujung_Pandang |
    | +08:00  |    Asia/Manila |
    | +08:00  |    Asia/Shanghai, Asia/Chongqing, Asia/Chungking, Asia/Harbin, PRC |
    | +08:00  |    Asia/Singapore, Singapore |
    | +08:00  |    Asia/Taipei, ROC |
    | +08:00  |    Asia/Ulaanbaatar, Asia/Ulan_Bator |
    | +08:00  |    Australia/Perth, Australia/West |
    | +08:00  |    Etc/GMT-8 |
    | +08:45  |    Australia/Eucla |
    | +09:00  |    Asia/Chita |
    | +09:00  |    Asia/Dili |
    | +09:00  |    Asia/Jayapura |
    | +09:00  |    Asia/Khandyga |
    | +09:00  |    Asia/Pyongyang |
    | +09:00  |    Asia/Seoul, ROK |
    | +09:00  |    Asia/Tokyo, Japan |
    | +09:00  |    Asia/Yakutsk |
    | +09:00  |    Etc/GMT-9 |
    | +09:00  |    Pacific/Palau |
    | +09:30  |    Australia/Adelaide, Australia/South |
    | +09:30  |    Australia/Broken_Hill, Australia/Yancowinna |
    | +09:30  |    Australia/Darwin, Australia/North |
    | +10:00  |    Antarctica/DumontDUrville |
    | +10:00  |    Asia/Ust-Nera |
    | +10:00  |    Asia/Vladivostok |
    | +10:00  |    Australia/Brisbane, Australia/Queensland |
    | +10:00  |    Australia/Currie |
    | +10:00  |    Australia/Hobart, Australia/Tasmania |
    | +10:00  |    Australia/Lindeman |
    | +10:00  |    Australia/Melbourne, Australia/Victoria |
    | +10:00  |    Australia/Sydney, Australia/ACT, Australia/Canberra, Australia/NSW |
    | +10:00  |    Etc/GMT-10 |
    | +10:00  |    Pacific/Chuuk, Pacific/Truk, Pacific/Yap |
    | +10:00  |    Pacific/Guam |
    | +10:00  |    Pacific/Port_Moresby |
    | +10:00  |    Pacific/Saipan |
    | +10:30  |    Australia/Lord_Howe, Australia/LHI |
    | +11:00  |    Antarctica/Macquarie |
    | +11:00  |    Asia/Magadan |
    | +11:00  |    Asia/Sakhalin |
    | +11:00  |    Asia/Srednekolymsk |
    | +11:00  |    Etc/GMT-11 |
    | +11:00  |    Pacific/Bougainville |
    | +11:00  |    Pacific/Efate |
    | +11:00  |    Pacific/Guadalcanal |
    | +11:00  |    Pacific/Kosrae |
    | +11:00  |    Pacific/Norfolk |
    | +11:00  |    Pacific/Noumea |
    | +11:00  |    Pacific/Pohnpei, Pacific/Ponape |
    | +12:00  |    Antarctica/McMurdo |
    | +12:00  |    Asia/Anadyr |
    | +12:00  |    Asia/Kamchatka |
    | +12:00  |    Etc/GMT-12 |
    | +12:00  |    Pacific/Auckland, Antarctica/South_Pole, NZ |
    | +12:00  |    Pacific/Fiji |
    | +12:00  |    Pacific/Funafuti |
    | +12:00  |    Pacific/Kwajalein, Kwajalein |
    | +12:00  |    Pacific/Majuro |
    | +12:00  |    Pacific/Nauru |
    | +12:00  |    Pacific/Tarawa |
    | +12:00  |    Pacific/Wake |
    | +12:00  |    Pacific/Wallis |
    | +12:45  |    Pacific/Chatham, NZ-CHAT |
    | +13:00  |    Etc/GMT-13 |
    | +13:00  |    Pacific/Apia |
    | +13:00  |    Pacific/Enderbury |
    | +13:00  |    Pacific/Fakaofo |
    | +13:00  |    Pacific/Tongatapu |
    | +14:00  |    Etc/GMT-14 |
    | +14:00  |    Pacific/Kiritimati |

  version: '1.0.0'
servers:
  - url: https://accesspoints-api-sandbox-na.amazon.com/v1
    description: 'NA staging server for testing'
  - url: https://accesspoints-api-na.amazon.com/v1
    description: 'NA production server'
  - url: https://accesspoints-api-sandbox-eu.amazon.com/v1
    description: 'EU staging server for testing'
  - url: https://accesspoints-api-eu.amazon.com/v1
    description: 'EU production server'
  - url: https://accesspoints-api-sandbox-fe.amazon.com/v1
    description: 'FE staging server for testing'
  - url: https://accesspoints-api-fe.amazon.com/v1
    description: 'FE production server'
paths:
  /token:
    servers: [{
      "url": "https://api.amazon.com/auth/o2"
    }]
    post:
      summary: 'Returns an access token'
      description: |
        Once your Client ID has been whitelisted by Amazon, you can request a Login with Amazon access token to access the API.

        ### Access Token Expiration
        Access tokens expire after 1 hour. If your token expires, you will need to create a new token to use in all future requests. 
        
        If you try to access the API with an expired token you will get 403 HTTP errors (forbidden).
      requestBody:
        description: Partner credentials must be set in the request body.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenRequest'

      responses:
        '200':
          description: 'Returns a valid access token.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
        '401':
          description: 'Authentication failed.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponseError'

  /feeds:
    post:
      summary: 'Creates a feed'
      description: 'This resource creates a feed containing information of a list Access Points to be created or updated. The feed is always processed asynchronously.'
      security:
        - BearerAuth: []
      parameters:
        - in: header
          name: 'Content-Type'
          description: |
            The `Content-Type` header is required for this method and must be `application/json`. 
          schema:
            type: string
            default: 'application/json'
          required: true
        - in: header
          name: 'Content-Length'
          description: |
            The `Content-Length` header is required for this method and ***must*** match the size of the body on the payload.
            > **NOTE**: Sending an incorrect value will make the request fail.
          schema:
            type: int
          required: true
        - in: query
          name: feedType
          description: |
            Specifies the type of feed to be submitted.
            * For Amazon Hub Counter access points use value `STORE_FEED`.
            * For third party pick-up points use the value `3P`.
          schema:
            type: string
            example: STORE_FEED
            enum: [STORE_FEED, 3P]
          required: true
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/FeedsRequest'
      responses:
        '201':
          description: 'Feed created.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  feedId:
                    type: string
                    example: '0fbee22e-e455-44d5-9a5d-14fd1a312578'
        '403':
          description: 'Unauthorized. Invalid or expired access_token.'
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/AuthError'

    get:
      summary: 'Returns a list of feeds'
      description: | 
        This method returns a list of feeds, feeds are bulk Access Points updates promises. This resource supports pagination via the optional parameters _pageSize_ and _nextOffset_. 
        
        The feeds are processed asynchronously, when the _status_ of the feed is set to **Completed** it means the processing of the feed finished. 
        
        To check the results of this processing it’s required to query the resource _v1/feeds/{feedId}/documents/{outputDocumentId}_ with the corresponding _feedId_ and _outputDocumentId_ of the feed.
      security:
        - BearerAuth: []
      parameters: 
        - in: query
          name: pageSize
          description: 'Optional. The maximum amount of feeds to get per request, the default value is 50.'
          schema:
            type: integer
            default: 50
            maximum: 100
          required: false
        - in: query
          name: nextOffset
          example: '07ad3e76-a9f7-4222-8586-3d142048cd43:40349'
          description: 'Optional. If not set it will return the latest feeds as per page size value. If provided you will receive the results starting from nextOffset value.'
          schema:
            type: string
          required: false
      responses:
        '200':
            description: 'A list of feeds.'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    nextOffset:
                      type: string
                      example: '07ad3e76-a9f7-4222-8586-3d142048cd43:40349'
                      description: 'Token for pagination, use this in the query string to access next page.'
                      nullable: true
                    records:
                      type: array
                      description: An array containing latest uploaded feeds.
                      items: 
                        $ref: '#/components/schemas/FeedsResponse'
        '403':
            description: 'Unauthorized. Invalid or expired access_token.'
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/AuthError'

  /feeds/{feedId}:
    get:
      summary: 'Returns a feed'
      description: 'This method returns an specific feed.'
      security:
        - BearerAuth: []
      parameters: 
        - in: path
          name: feedId
          description: 'FeedId of the requested feed.'
          schema: 
            type: string
            example: '0fbee22e-e455-44d5-9a5d-14fd1a312578'
          required: true
      responses:
        '200':
          description: 'Returns the feed information.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedsResponse'
        '403':
          description: 'Unauthorized. Invalid or expired access_token.'
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/AuthError'
        '404':
          description: 'Feed not found.'
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/NotFoundError'

  /feeds/{feedId}/documents/{documentId}:
    get:
      summary: 'Returns a document'
      description: |
        This method returns an specific document, the requested document can be an InputDocument or OutputDocument.

        * If the documentId corresponds to an OutputDocument, you will get the results of the feed processing.
        * If the documentId corresponds to an InputDocument, you will get exactly the same payload that you submitted.
      security:
        - BearerAuth: []
      parameters: 
        - in: path
          name: feedId
          description: 'FeedId of the feed that originated this document.'
          example: '0fbee22e-e455-44d5-9a5d-14fd1a312578'
          schema: 
            type: string
          required: true
        - in: path
          name: documentId
          example: 'amzn1.tortuga.3.a74d493a-0767-4620-902f-3f05dd8cfc02.T2P91TLO6KF345'
          description: 'DocumentId of the requested document.'
          schema: 
            type: string
          required: true
      responses:
        '200':
          description: 'Returns the feed information.'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/OutputDocument'
                  - $ref: '#/components/schemas/FeedsRequest'
        '403':
          description: 'Unauthorized. Invalid or expired access_token.'
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/AuthError'
        '404':
          description: 'Document not found.'
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/NotFoundError'
components:
  securitySchemes:
    BearerAuth:
      description: |
        All API endpoints, except for the https://api.amazon.com/auth/o2/token, must be authenticated with a Bearer token.
        
        This token must be used to authenticate all API requests, it must be set in the ```Authorization``` HTTP header example: 
        
        ```Authorization: Bearer "Atc|MQEWYJxEnP3I1ND03ZzbY...REDACTED```.
      type: http
      scheme: bearer
  schemas:
    AccessPoint:
      type: object
      properties:
        accessPointId:
          type: string
          example: 'ACM-0045'
          pattern: '^(?!\\s*$).+'
          description: |
            Unique identifier for a single Access Point. The same location must be always identified by the same accessPointId. You cannot change the accessPointId for an already created location. Also, it is not possible to upload the same active location twice with two different accessPointIds.

            Please use the following format:
            Three capital letter prefix identifying your company followed by a hyphen and your internal store ID.

            If you do not already use internal IDs, please assign a number to each of your stores for the format to follow.

            Eg. For Acme store 45: `ACM-0045`

            Using this format for your store IDs will make quality reporting between Amazon and yourselves much more efficient as it is easier to identify individual stores.
        accessPointName:
          type: string
          example: 'Amazon Hub Counter - Acme Manchester'
          maximum: 50
          pattern: '^(?!\\s*$).+'
          description: |
            The customer-facing business name for this location, prepended by the fixed string `Amazon Hub Counter - `. 
            
            If a location descriptor is used to differentiate store chains, add the descriptor after the store name. 
            
            For example: `Amazon Hub Counter - Acme Manchester`. 
            
            There is a 50 character limit for this property. You therefore have 29 characters available after `Amazon Hub Counter - ` to provide your location’s business name and descriptor.

            > **NOTE**: If this is a third party pick-up point the `Amazon Hub Counter - ` prefix does not applies.
        loginClaim:
          type: string
          example: 'store123@companydomain.com or +447999999123'
          description: |
            Unique email address or mobile phone accessible by store manager that will be associated with the store. Store manager will either create a new Amazon account or sign into Counter app using this loginClaim for the store. A logiClaim can only be mapped to one store at a time.

            Email loginClaim must only be provided in RFC 5322 format and phone loginClaim must be provided in international format, preferably E164; beginning with + and country code. E.g. email: store123@companydomain.com, phone: +447999999123. Please note that loginClaim is case insensitive and email loginClaims such as abc@xyz.com will be treated same as ABC@xyz.com. Similarly, phone numbers such as +447999999123 and +44(7999)-999123 will be treated as same.
       
            loginClaim is honoured only for approved clients. For unapproved clients, the field is ignored even if sent in the feed. Please contact your Amazon Hub Representative to check if you are approved for using this field.

            loginClaim is not mandatory for existing stores that were onboarded without loginClaims, but is mandatory for any new stores of approved clients and stores which are already associated to some loginClaims in Amazon systems.

            Stores onboarded with loginClaim will receive location activation notification via either email or SMS depending upon the channel provided in communication details. Email takes precedence over SMS in case both are provided. In case no communication details are provided, notification will be sent to email or phone that was provided in the loginClaim field.

            loginClaim is an updatable field for a store record as long as the input loginClaim has not been used for a store activation on Counter app. In other words, if a loginClaim X is mapped to store Y which was previously activated, then the loginClaim X cannot be used for any other store.

            Once a partner maps a loginClaim to a store, no other client can use that same loginClaim to map to any of their stores. Thus, loginClaims are reserved within the Partner namespace. However, the same Partner is allowed to update the login claims for its planned stores as many times as required.

            It is recommended to send loginClaims for all the stores in a single feed. To understand why, let us consider the following scenario: 
            - Partner submits a feed to onboard store Y with loginClaim A and store Z with loginClaim B. 
            - loginClaim A is mapped to store Y, while login claim B is mapped to store Z. 
            - The Partner then sends a feed to update store Z with loginClaim A. Given both the stores are in the 'Planned' state and belong to same client, operation will succeed. 
            - Since a loginClaim can be mapped only to one store at a time, loginClaim A will finally be mapped to store Z, whilst loginClaim B will be removed from the system, leaving store Y abandoned. 
            To mitigate this risk, clients are advised to send loginClaims for all the stores in a single feed.

            > **NOTE**: The field is not applicable for third party pickup points.  
        isActive:
          type: boolean
          example: true
          description: | 
           True or false value. This is the status of the Access Point. An active location will be processed by Amazon for activation. An inactive location will be instantly removed from Amazon website. This property will be used by you to deactivate or activate stores already in your Counter store list.

            Eg. `true`
        isRestrictedAccess:
          type: boolean
          example: false
          description: |
            True or false value. This indicates that the Access Point is in a restricted area which is not accessible to the public. A message will be displayed on Amazon website indicating that the customer will require authorization to access it. By default this is set to false.

            Eg. `true`
        timeZone:
          type: string
          example: America/Los_Angeles
          description: |
            The Access Point time zone.
            See Appendix II for format details.

            Eg. `Europe/London`
        capacity:
          type: object
          properties:
            threshold:
              type: integer
              description: 'Maximum number of packages that can be stored at this Access Point location. If the value is not present the threshold will be set by default to 20 packages. Minimum supported value is 5 packages.'
              minimum: 5
          required:
            - threshold
        communicationDetails:
          type: object
          description: |
            Access Point contact details - mandatory for Amazon Hub Counter locations which are not using loginClaim field as store registration email is sent to the *emailId* specified here.

            This field is optional for stores onboarded with loginClaim, who will receive location activation notification via either email or SMS depending upon the channel provided in communication details. Email takes precedence over SMS in case both are provided. In case no communication details are provided, notification will be sent on email or phone that was provided in the login claim field.

            > **NOTE**: This field is not mandatory for third party pick-up points.
          properties:
            phoneNumber:
              type: string
              example: '+44 7999 999123'
              pattern: '^[+]?([0-9]*[\\.\\s\\-\\(\\)]|[0-9]+){3,24}$'
              description: |
                The Access Point phone number, beginning with country code.

                Eg. `+44 7999 999123`
            emailId:
              type: string
              example: 'store123@companydomain.com'
              pattern: "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?"
              description: |
                The Access Point email address. It will be used by Amazon to contact the location and initiate the onboarding process.

                Eg. `store123@companydomain.com`
            faxPhone:
              type: string
              example: '+44 7999 999123'
              description: |
                The Access Point fax phone number, beginning with country code.

                Eg. `+44 7999 999123`
          required:
            - phoneNumber
            - emailId
        terminationDate:
          type: string
          example: '2199-12-31'
          pattern: '^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$'
          description: |
            The Access Point termination date. This can be used to notify Amazon of an upcoming location termination. This is in the format YYYY-MM-DD.

            Eg. `2199-12-31`
        capabilities:
          type: array
          minItems: 1
          items:
            type: string
            example: 'PICK_UP'
            enum: [PICK_UP, DROP_OFF]
          description: |
            The Access Point supported capabilities: PICK_UP for deliveries and DROP_OFF for c-returns.

            Eg. `["PICK_UP", "DROP_OFF"]`
        address:
          type: object
          properties:
            addressFieldOne:
              type: string
              example: '123 Fellowman Road'
              maximum: 180
              pattern: '^(?!\\s*$).+'
              description: |
                Street address:
                
                Eg. `123 Fellowman Road`

                Or building name:
                
                Eg. `Unit 2, Busby Building`

                > **NOTE**: This property has a 180 character limit.
            addressFieldTwo:
              type: string
              example: 'Hale'
              maximum: 60
              description: |
                Street Address 
                (if addressFieldOne = Building Name)
                Only put Street Address in this property if there is a building name in the 1st address property.

                Eg. `123 Fellowman Road`

                Or additional line for Access point address 
                (if addressFieldOne = Street Address)
                This can be a relevant village or town if there is a street address in the 1st address property.
                
                Eg. `Hale`

                > **NOTE**: This property has a 60 character limit.
            addressFieldThree:
              type: string
              example: 'Altrincham'
              maximum: 60
              description: |
                Additional line for the Access Point address.
                This can be a relevant village or town.
                This property has a 60 character limit.

                Eg. `Altrincham`

                > **NOTE**: This property has a 60 character limit.
            city:
              type: string
              example: 'Manchester'
              maximum: 50
              pattern: '^(?!\\s*$).+'
              description: |
                The city where the Access Point is located.

                Eg. `Manchester`
            region:
              type: string
              example: null
              maximum: 50
              description: |
                The region where the Access Point is located.

                * Equivalent to state in the US.
                * Leave blank for UK. 
                * Equivalent to prefecture for JP.
            district:
              type: string
              example: Greater Manchester
              maximum: 50
              description: |
                The district/county where the Access Point is located.

                Eg. `Greater Manchester`
            postalCode:
              type: string
              example: WA34 9PS
              maximum: 20
              pattern: '^(?!\\s*$).+'
              description: |
                The Access Point postal code. 

                * For UK, include a space between the 2 halves of the postcode.

                Eg. `WA34 9PS`
            countryCode:
              type: string
              example: 'GB'
              description: |
                The Access Point country code.

                Eg. `GB`
            latitude:
              type: string
              example: '79.290182'
              description: |
                The Access Point latitude to 6 decimal places.

                Eg. `79.290182`
              pattern: '[+-]?\\d*\\.?\\d+'
            longitude:
              type: string
              example: '21.127915'
              description: |
                The Access Point longitude to 6 decimal places.

                Eg. `21.127915`
              pattern: '[+-]?\\d*\\.?\\d+'''
          required:
            - addressFieldOne
            - city
            - countryCode
            - postalCode
            - latitude
            - longitude
        standardHours:
          type: array
          description: 'An array containing location standard opening hours.'
          minItems: 2
          items:
            type: object
            properties:
              day:
                type: string
                example: 'MONDAY'
                description: |
                  The day of the week for this opening hours’ entry.

                  Eg. `MONDAY`
                enum: [MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY]
              openingTime:
                type: string
                example: '08:00:00'
                description: |
                  Access Point opening time in the format HH:MM:SS

                  Eg. `08:00:00`

                  * If store is 24 hours, please set it to `00:00:00`
                pattern: '^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$'
              closingTime:
                type: string
                example: '22:00:00'
                description: |
                  Access Point closing time in the format HH:MM:SS

                  Eg. `22:00:00`

                  * If store is 24 hours, please set it to `23:59:59`
                pattern: '^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$'
              midDayClosures:
                type: array
                description: 'An array of midday closure during any operating day.'
                minItems: 1
                items:
                  $ref: '#/components/schemas/MidDayClosure'
            required:
              - day
              - openingTime
              - closingTime
        exceptionalClosures:
          type: array
          description: 'A list with the exceptional closures for the Access Point. The minimum unit of an exceptional closure is one day.'
          minItems: 1
          items:
            $ref: '#/components/schemas/ExceptionalClosure'
      required:
        - accessPointId
        - accessPointName
        - isActive
        - timeZone
        - address
        - standardHours
        - capabilities 

    AccessTokenRequest:
      type: object
      properties:
        client_id: 
          type: string
          example: 'amzn1.application-oa2-client.5f4deb235c3....REDACTED'
          description: 'The client ID you get as part of your security profile.'
        client_secret: 
          type: string
          example: '4244a2183d4c67aa66f15b4923f4496a5e14a1a326c96c5606715505dfbc7544'
          description: 'The client secret you get as part of your security profile.'
        grant_type: 
          type: string
          default: client_credentials
        scope: 
          type: string
          default: accesspoints::accesspoint:readwrite

    AccessTokenResponse:
      type: object
      properties:
        access_token: 
          type: string
          example: 'Atc|MQEWYJxEnP3I1ND03ZzbY...REDACTED'
          description: 'The bearer token that is going to be used to authenticate the API requests.'
        expires_in: 
          type: integer
          description: 'Expiration time in seconds since the token is issued.'
          default: 3600
        scope: 
          type: string
          description: 'Scope relevant to this token.'
          default: 'accesspoints::accesspoint:readwrite'
        token_type: 
          type: string
          description: 'Type of access token.'
          default: 'Bearer'

    AccessTokenResponseError:
      type: object
      properties:
        error: 
          type: string
          example: 'invalid_client'
        error_description: 
          type: string
          example: 'Client authentication failed'

    FeedsRequest:
      type: array
      description: 'A list of the partner Access Points to be processed.'
      items:
        $ref: '#/components/schemas/AccessPoint'

    FeedsResponse:
      type: object
      properties:
        feedId: 
          type: string
          example: '0fbee22e-e455-44d5-9a5d-14fd1a345055'
          description: 'A unique indentifier representing your request.'
        clientId: 
          type: string
          example: 'Atc|MQEWYJxEnP3I1ND03ZzbY...REDACTED'
          description: Your ClientId.
        sequenceNumber: 
          type: integer
          example: 160
          description: 'An incremental number assinged to the feed.'
        status: 
          type: string
          example: 'Completed'
          enum: [Processing, Failed, Completed]
          description: 'The status **Processing** corresponds to a feed that is still being processed, **Completed** for feeds fully processed and **Failed** if the feed processing failed. * **Failed:** This error code will be given as part of failure which can not be recovered. For instance, data configured in downstream service is not correct. No Output document will be generated in such scenarios. * **Processing:** The Input Document is still in process. * **Completed:** The Input Document processing is completed and the corresponding Output Document is generated.'
        inputDocuments: 
            type: array
            description: 'A list of Input Documents.' 
            items:
              $ref: '#/components/schemas/Document'
        outputDocuments:
            type: array
            description: 'A list of Output Documents.'
            items:
              $ref: '#/components/schemas/Document'
        createDate: 
          type: integer
          example: 1572273619584
          description: 'Epoch time when you have submitted the feed.'

    MidDayClosure:
      type: object
      properties:
        startTime:
          type: string
          example: '14:00:00'
          description: |
            The midday closures closing time (if any). In the format of `HH:MM:SS`.

            Eg. `14:00:00`
          pattern: '^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$'
        endTime:
          type: string
          example: '15:00:00'
          description: |
            The midday closure opening time (if any). In the format of `HH:MM:SS`.

            Eg. `15:00:00`
          pattern: '^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$'
      required:
        - startTime
        - endTime

    ExceptionalClosure:
      type: object
      properties:
        startDateTime:
          type: string
          example: '2018-06-30'
          description: |
            Exceptional closure start date in the format `YYYY-MM-DD`

            Eg. `2018-06-30`
          pattern: '^(20[1-9][0-9])-(0[0-9]|1[0-2])-(0[1-9]|([12][0-9]|3[01]))(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])?$'
        endDateTime:
          type: string
          example: '2018-07-10'
          description: |
            Exceptional closure end date in the format `YYYY-MM-DD`

            Eg. `2018-07-10`
          pattern: '^(20[1-9][0-9])-(0[0-9]|1[0-2])-(0[1-9]|([12][0-9]|3[01]))(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])?$'
      required:
        - startDateTime
        - endDateTime

    AuthError:
      type: object
      properties:
        message: 
          type: string
          example: 'Unexpected Authorization token format'
        retryable: 
          type: boolean
          example: false

    NotFoundError:
      type: object
      properties:
        message: 
          type: string
          example: 'Requested resource does not exists.'
        retryable: 
          type: boolean
          example: false

    ProcessingError:
      type: object
      properties:
        errorCode:
          type: string
          example: 'INVALID_ISACTIVE_FLAG_STATE'
          enum:
            - INVALID_ACCESS_POINT_ID
            - INVALID_ACCESS_POINT_NAME
            - INVALID_ACTIVE_FLAG
            - INVALID_TIMEZONE
            - INVALID_TERMINATION_DATE
            - INVALID_CAPABILITIES
            - INVALID_ADDRESS
            - INVALID_STANDARD_HOURS
            - INVALID_EXCEPTION_CLOSURES
            - INVALID_CAPACITY
            - INVALID_DAY
            - INVALID_OPENING_TIME
            - INVALID_CLOSING_TIME
            - INVALID_START_TIME
            - INVALID_END_TIME
            - INVALID_START_DATE_TIME
            - INVALID_END_DATE_TIME
            - INVALID_MID_DAY_CLOSURES
            - INVALID_COMMUNICATION_DETAILS
            - INVALID_EMAIL_ID
            - INVALID_PHONE_NUMBER
            - INVALID_COUNTRY_CODE
            - INVALID_LATITUDE
            - INVALID_LONGITUDE
            - INVALID_CITY
            - INVALID_ADDRESS_FIELD_ONE
            - INVALID_ADDRESS_FIELD_TWO
            - INVALID_ADDRESS_FIELD_THREE
            - INVALID_POSTAL_CODE
            - INVALID_REGION
            - INVALID_DISTRICT
            - DUPLICATE_STORE_ENTRY
            - INVALID_ISACTIVE_FLAG_STATE
            - INVALID_STORE_STATE
            - STORE_CREATION_FAILURE
            - STORE_UPDATION_FAILURE
            - UNABLE_TO_UPDATE_STORE_STATUS
            - UNABLE_TO_UPDATE_STORE_CAPABILITY
            - UNABLE_TO_UPDATE_STORE_CAPABILITY_STATUS
            - UNABLE_TO_UPDATE_CAPACITY
            - UNABLE_TO_UPDATE_CLIENT_REF
            - DUPLICATE_LOGIN_CLAIM_ENTRY 
            - INVALID_LOGIN_CLAIM
            - MISSING_LOGIN_CLAIM
            - LOGIN_CLAIM_ALREADY_MAPPED_TO_STORE
            - UNABLE_TO_PROCESS_LOGIN_CLAIM

          description: |
            A unique error code to identify the problem. The value will only be present in case of failure.
            * `INVALID_ACCESS_POINT_ID` - Access point Id is not valid or missing. Sample error message: [INVALID_ACCESS_POINT_ID] required key [accessPointId] not found.
            * `INVALID_ACCESS_POINT_NAME` - Access point name is not valid or missing. Sample error message: [INVALID_ACCESS_POINT_NAME] required key [accessPointName] not found.
            * `INVALID_ACTIVE_FLAG` - isActive Flag is not valid or missing. For example sample error message will be: [INVALID_ACTIVE_FLAG] required key [isActive] not found.
            * `INVALID_TIMEZONE` - TimeZone is not valid or missing. For example sample error message will be: [INVALID_TIMEZONE] TimeZone is not valid.
            * `INVALID_TERMINATION_DATE` - Termination is not valid or missing.
            * `INVALID_CAPABILITIES` - Capabilities are not valid or missing.
            * `INVALID_ADDRESS` - Invalid address. NOTE: Two letter country code is required, address cannot be duplicated.
            * `INVALID_STANDARD_HOURS` - Standard hours for an access point should be as per schema. If not, this error code will be returned. **NOTE**: Opening hours must be earlier than Closing hours.
            * `INVALID_EXCEPTION_CLOSURES` - Exceptional closures override standard hours. Format of these should be as per the schema. **NOTE**: Initial date must be earlier than final date.
            * `INVALID_CAPACITY` - This exception code describes one of the following scenario. 1. Threshold Key is absent in the capacity object. [E.g. Error Message: [INVALID_CAPACITY_THRESHOLD] required key [threshold] not found]. 2. Threshold Key value is less than five. [E.g. error messages: [INVALID_CAPACITY_THRESHOLD] <x> is not higher than or equal to five]
            * `INVALID_DAY` - Invalid day format.
            * `INVALID_OPENING_TIME` - Invalid time format. Please check schema for allowed format.
            * `INVALID_CLOSING_TIME`
            * `INVALID_START_TIME`
            * `INVALID_END_TIME`
            * `INVALID_START_DATE_TIME`
            * `INVALID_END_DATE_TIME`
            * `INVALID_MID_DAY_CLOSURES` - MidDay closures should be as per the schema, otherwise this error code will be returned. Opening and closing time should be such that opening time is before closing time.
            * `INVALID_COMMUNICATION_DETAILS` - Returned in case schema is not followed for a given input.
            * `INVALID_EMAIL_ID`
            * `INVALID_PHONE_NUMBER`
            * `INVALID_COUNTRY_CODE`
            * `INVALID_LATITUDE`
            * `INVALID_LONGITUDE`
            * `INVALID_CITY` - city should be a non-empty string within 50 characters limit. Sample error message: [INVALID_CITY] expected maxLength: 50, actual: 61
            * `INVALID_ADDRESS_FIELD_ONE` - addressFieldOne should be a non-empty string within 180 characters limit. Sample error message: [INVALID_ADDRESS_FIELD_ONE] expected maxLength: 180, actual: 216
            * `INVALID_ADDRESS_FIELD_TWO` - If provided, addressFieldTwo should be a non-empty string within 60 characters limit. Sample error message: [INVALID_ADDRESS_FIELD_TWO] addressFieldTwo should not be greater than 60 characters.
            * `INVALID_ADDRESS_FIELD_THREE` - If provided, addressFieldThree should be a non-empty string within 60 characters limit. Sample error message: [INVALID_ADDRESS_FIELD_THREE] addressFieldThree should not be greater than 60 characters.
            * `INVALID_POSTAL_CODE` - postalCode should be a non-empty string within 20 characters limit. Sample error message: [INVALID_POSTAL_CODE] expected maxLength: 20, actual: 61
            * `INVALID_REGION` - If provided, region should be a non-empty string within 50 characters limit. Sample error message: [INVALID_REGION] region should not be greater than 50 characters.
            * `INVALID_DISTRICT` - If provided, district should be a non-empty string within 50 characters limit. Sample error message: [INVALID_DISTRICT] district should not be greater than 50 characters.
            * `DUPLICATE_STORE_ENTRY` - A given access point entry is duplicated based on its id. Sample error message: [DUPLICATE_STORE_ENTRY] This is a duplicate store entry, index occurrences are: [1, 2]
            * `INVALID_ISACTIVE_FLAG_STATE` - isActive flag value has not expected value. For example, to create an access point isActive flag value has to be true. Sample error message: [INVALID_ISACTIVE_FLAG_STATE] Store isActive flag should be set as true for new creation.
            * `INVALID_STORE_STATE` - This error code indicates that store is not in a valid state to perform certain operation. For example, a store cannot be marked as active or inactive if it exists in planned state. Sample error message: [INVALID_STORE_STATE] Store is in planned state, cannot be updated to active or inactive state.
            * `STORE_CREATION_FAILURE` - Failure in Amazon services, please report this error to Amazon and retry.
            * `STORE_UPDATION_FAILURE`
            * `UNABLE_TO_UPDATE_STORE_STATUS`
            * `UNABLE_TO_UPDATE_STORE_CAPABILITY`
            * `UNABLE_TO_UPDATE_STORE_CAPABILITY_STATUS`
            * `UNABLE_TO_UPDATE_CAPACITY`
            * `UNABLE_TO_UPDATE_CLIENT_REF` - This error indicates that given accessPointId is not updated for a given store. Sample message will be: [UNABLE_TO_UPDATE_CLIENT_REF] Unable to update accessPointId for created store accessPointId1
            * `DUPLICATE_LOGIN_CLAIM_ENTRY` - This error code indicates that a given login claim entry is duplicated based on its value. Sample error message: [DUPLICATE_LOGIN_CLAIM_ENTRY] This is a duplicate login claim entry, index occurrences are: [1, 2]
            * `INVALID_LOGIN_CLAIM` - This error code indicates that given login claim does not adhere to a valid email in RFC 5322 format or valid phone number in E164 format. Sample error message: [INVALID_LOGIN_CLAIM] Login claim is not valid. Phone number should be in international or E164 format and email in RFC 5322 format
            * `MISSING_LOGIN_CLAIM` - This error code is applicable for clients approved for login claim flow. It indicates that either the login claim was not provided while onboarding a new store or login claim was not provided for an existing store already associated with some login claim. Sample error message: [MISSING_LOGIN_CLAIM] This is a required field when onboarding a new store or when updating the store already associated with a login claim.
            * `LOGIN_CLAIM_ALREADY_MAPPED_TO_STORE` - This error code indicates the login claim cannot be used for current store as it is already being used for a different store, please use a different login claim to register. Sample error message: [LOGIN_CLAIM_ALREADY_MAPPED_TO_STORE] There is already a store associated with this login claim. Please use a different login claim to register.
            * `UNABLE_TO_PROCESS_LOGIN_CLAIM` - This error code indicates the login claim was not processed successfully due to failure in Amazon services, please report it to Amazon and retry. Sample error message: [UNABLE_TO_PROCESS_LOGIN_CLAIM] There was an error processing the login claim. Please try again or contact Amazon Hub Representative if error persists.
        errorMessage:
          type: string
          example: '[INVALID_ISACTIVE_FLAG_STATE] Store isActive flag should be set as true for new creation.'
          description: 'The error message in user-friendly format.'       

    Document:
      type: object
      properties:
        documentId: 
          type: string
          example: 'amzn1.tortuga.3.a74d493a-0767-4620-902f-3f05dd8cfc02.T2P91TLO6KF549'
          description: 'A unique id representing the document.'
        documentType: 
          type: string
          example: 'OutputDocument'
          enum: [InputDocument, OutputDocument]
          description: 'The type of document.'

    OutputDocument:
      type: object
      description: 'This object hold the processing details about your submitted feed.'
      properties:
        feedId:
          description: 'This corresponds to your feed submission feedId.'
          example: '0fbee22e-e455-44d5-9a5d-14fd1a345055'
          type: string
        noOfAccessPointsProcessed:
          description: 'The total number of Access Points being processed.'
          example: 2
          type: integer
        noOfAccessPointsSuccessfullyProcessed:
          description: 'The total number of Access Points successfully updated as per feed submitted.'
          example: 1
          type: integer
        noOfAccessPointsFailedToProcess:
          example: 1
          description: 'The total number of Access Points which access points are not able to process due to errors.'
          type: integer
        failedAccessPointProcessingDetails:
          type: array
          description: The detailed list of errors for this processing.
          items:
            type: object
            properties:
              indexNumber:
                description: 'This corresponds to index of entry in Input feed.'
                example: 1
                type: integer
              accesspointId: 
                description: 'A unique Id for the Access Point. This is provided at the time of feed submission.'
                example: 'ACM-0045'
                type: string
              resultStatus:
                description: 'An enum property which dictates the success, failure and warning cases.'
                example: 'FAILURE'
                type: string
                enum: [SUCCESS, WARNING, FAILURE]
              errors:
                type: array
                description: 'List of processing errors and their description.'
                items:
                  $ref: '#/components/schemas/ProcessingError'
            required:
              - indexNumber
              - accesspointId
              - resultStatus
      required:
        - feedId
        - noOfAccessPointsProcessed
        - noOfAccessPointsSuccessfullyProcessed
        - noOfAccessPointsFailedToProcess
